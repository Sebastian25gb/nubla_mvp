services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "127.0.0.1:2181:2181"
    deploy:
      resources:
        limits:
          memory: "512m"
        reservations:
          memory: "256m"
    restart: unless-stopped
    networks:
      - internal

  kafka-1:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:9092,EXTERNAL://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-1:9092,EXTERNAL://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:SSL,EXTERNAL:SSL
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_NUM_IO_THREADS: 8
      KAFKA_NUM_NETWORK_THREADS: 3
      KAFKA_MESSAGE_MAX_BYTES: 10485760
      KAFKA_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/kafka.server.keystore.jks
      KAFKA_SSL_KEYSTORE_PASSWORD: password
      KAFKA_SSL_KEY_PASSWORD: password
      KAFKA_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/kafka.server.truststore.jks
      KAFKA_SSL_TRUSTSTORE_PASSWORD: password
    ports:
      - "127.0.0.1:29092:29092"
    command: >
      bash -c "sleep 10 && kafka-topics --create --topic network-logs --partitions 3 --replication-factor 3 --bootstrap-server kafka-1:9092 --if-not-exists && /etc/confluent/docker/run"
    volumes:
      - ./kafka-secrets:/etc/kafka/secrets
    deploy:
      resources:
        limits:
          memory: "1g"
        reservations:
          memory: "512m"
    restart: unless-stopped
    networks:
      - internal

  kafka-2:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:9093,EXTERNAL://0.0.0.0:29093
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-2:9093,EXTERNAL://localhost:29093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:SSL,EXTERNAL:SSL
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_NUM_IO_THREADS: 8
      KAFKA_NUM_NETWORK_THREADS: 3
      KAFKA_MESSAGE_MAX_BYTES: 10485760
      KAFKA_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/kafka.server.keystore.jks
      KAFKA_SSL_KEYSTORE_PASSWORD: password
      KAFKA_SSL_KEY_PASSWORD: password
      KAFKA_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/kafka.server.truststore.jks
      KAFKA_SSL_TRUSTSTORE_PASSWORD: password
    ports:
      - "127.0.0.1:29093:29093"
    volumes:
      - ./kafka-secrets:/etc/kafka/secrets
    deploy:
      resources:
        limits:
          memory: "1g"
        reservations:
          memory: "512m"
    restart: unless-stopped
    networks:
      - internal

  kafka-3:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:9094,EXTERNAL://0.0.0.0:29094
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-3:9094,EXTERNAL://localhost:29094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:SSL,EXTERNAL:SSL
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_NUM_IO_THREADS: 8
      KAFKA_NUM_NETWORK_THREADS: 3
      KAFKA_MESSAGE_MAX_BYTES: 10485760
      KAFKA_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/kafka.server.keystore.jks
      KAFKA_SSL_KEYSTORE_PASSWORD: password
      KAFKA_SSL_KEY_PASSWORD: password
      KAFKA_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/kafka.server.truststore.jks
      KAFKA_SSL_TRUSTSTORE_PASSWORD: password
    ports:
      - "127.0.0.1:29094:29094"
    volumes:
      - ./kafka-secrets:/etc/kafka/secrets
    deploy:
      resources:
        limits:
          memory: "1g"
        reservations:
          memory: "512m"
    restart: unless-stopped
    networks:
      - internal

  elasticsearch-1:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.15.0
    environment:
      - node.name=elasticsearch-1
      - discovery.seed_hosts=elasticsearch-1:9300,elasticsearch-2:9300,elasticsearch-3:9300
      - cluster.initial_master_nodes=elasticsearch-1,elasticsearch-2,elasticsearch-3
      - xpack.security.enabled=true
      - xpack.security.authc.api_key.enabled=true
      - ELASTIC_PASSWORD=yourpassword
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
      - xpack.security.http.ssl.enabled=true
      - xpack.security.http.ssl.keystore.path=/usr/share/elasticsearch/config/elastic-certificates.p12
      - xpack.security.http.ssl.keystore.password=elastic
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.keystore.path=/usr/share/elasticsearch/config/elastic-certificates.p12
      - xpack.security.transport.ssl.keystore.password=elastic
    ports:
      - "127.0.0.1:9200:9200"
    volumes:
      - esdata1:/usr/share/elasticsearch/data
      - ./elastic-secrets:/usr/share/elasticsearch/config
    deploy:
      resources:
        limits:
          memory: "2g"
        reservations:
          memory: "1g"
    restart: unless-stopped
    networks:
      - internal

  elasticsearch-2:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.15.0
    environment:
      - node.name=elasticsearch-2
      - discovery.seed_hosts=elasticsearch-1:9300,elasticsearch-2:9300,elasticsearch-3:9300
      - cluster.initial_master_nodes=elasticsearch-1,elasticsearch-2,elasticsearch-3
      - xpack.security.enabled=true
      - xpack.security.authc.api_key.enabled=true
      - ELASTIC_PASSWORD=yourpassword
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
      - xpack.security.http.ssl.enabled=true
      - xpack.security.http.ssl.keystore.path=/usr/share/elasticsearch/config/elastic-certificates.p12
      - xpack.security.http.ssl.keystore.password=elastic
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.keystore.path=/usr/share/elasticsearch/config/elastic-certificates.p12
      - xpack.security.transport.ssl.keystore.password=elastic
    ports:
      - "127.0.0.1:9201:9200"
    volumes:
      - esdata2:/usr/share/elasticsearch/data
      - ./elastic-secrets:/usr/share/elasticsearch/config
    deploy:
      resources:
        limits:
          memory: "2g"
        reservations:
          memory: "1g"
    restart: unless-stopped
    networks:
      - internal

  elasticsearch-3:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.15.0
    environment:
      - node.name=elasticsearch-3
      - discovery.seed_hosts=elasticsearch-1:9300,elasticsearch-2:9300,elasticsearch-3:9300
      - cluster.initial_master_nodes=elasticsearch-1,elasticsearch-2,elasticsearch-3
      - xpack.security.enabled=true
      - xpack.security.authc.api_key.enabled=true
      - ELASTIC_PASSWORD=yourpassword
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
      - xpack.security.http.ssl.enabled=true
      - xpack.security.http.ssl.keystore.path=/usr/share/elasticsearch/config/elastic-certificates.p12
      - xpack.security.http.ssl.keystore.password=elastic
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.keystore.path=/usr/share/elasticsearch/config/elastic-certificates.p12
      - xpack.security.transport.ssl.keystore.password=elastic
    ports:
      - "127.0.0.1:9202:9200"
    volumes:
      - esdata3:/usr/share/elasticsearch/data
      - ./elastic-secrets:/usr/share/elasticsearch/config
    deploy:
      resources:
        limits:
          memory: "2g"
        reservations:
          memory: "1g"
    restart: unless-stopped
    networks:
      - internal

  kafka-consumer-1:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
      - elasticsearch-1
      - elasticsearch-2
      - elasticsearch-3
    environment:
      - PYTHONUNBUFFERED=1
      - KAFKA_SSL_KEYSTORE_LOCATION=/etc/kafka/secrets/kafka.server.keystore.jks
      - KAFKA_SSL_KEYSTORE_PASSWORD=password
      - KAFKA_SSL_KEY_PASSWORD=password
      - KAFKA_SSL_TRUSTSTORE_LOCATION=/etc/kafka/secrets/kafka.server.truststore.jks
      - KAFKA_SSL_TRUSTSTORE_PASSWORD=password
    volumes:
      - ./kafka-secrets:/etc/kafka/secrets
      - ./elastic-secrets:/etc/elasticsearch/secrets
    deploy:
      resources:
        limits:
          memory: "512m"
        reservations:
          memory: "256m"
    restart: unless-stopped
    networks:
      - internal

  kafka-consumer-2:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
      - elasticsearch-1
      - elasticsearch-2
      - elasticsearch-3
    environment:
      - PYTHONUNBUFFERED=1
      - KAFKA_SSL_KEYSTORE_LOCATION=/etc/kafka/secrets/kafka.server.keystore.jks
      - KAFKA_SSL_KEYSTORE_PASSWORD=password
      - KAFKA_SSL_KEY_PASSWORD=password
      - KAFKA_SSL_TRUSTSTORE_LOCATION=/etc/kafka/secrets/kafka.server.truststore.jks
      - KAFKA_SSL_TRUSTSTORE_PASSWORD=password
    volumes:
      - ./kafka-secrets:/etc/kafka/secrets
      - ./elastic-secrets:/etc/elasticsearch/secrets
    deploy:
      resources:
        limits:
          memory: "512m"
        reservations:
          memory: "256m"
    restart: unless-stopped
    networks:
      - internal

  kafka-consumer-3:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
      - elasticsearch-1
      - elasticsearch-2
      - elasticsearch-3
    environment:
      - PYTHONUNBUFFERED=1
      - KAFKA_SSL_KEYSTORE_LOCATION=/etc/kafka/secrets/kafka.server.keystore.jks
      - KAFKA_SSL_KEYSTORE_PASSWORD=password
      - KAFKA_SSL_KEY_PASSWORD=password
      - KAFKA_SSL_TRUSTSTORE_LOCATION=/etc/kafka/secrets/kafka.server.truststore.jks
      - KAFKA_SSL_TRUSTSTORE_PASSWORD=password
    volumes:
      - ./kafka-secrets:/etc/kafka/secrets
      - ./elastic-secrets:/etc/elasticsearch/secrets
    deploy:
      resources:
        limits:
          memory: "512m"
        reservations:
          memory: "256m"
    restart: unless-stopped
    networks:
      - internal